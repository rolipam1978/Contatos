
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author Ramiro
 */
public class FormContatos extends javax.swing.JFrame {

    MaskFormatter formatoTelefone;
    String sexo = "M";

    DefaultTableModel tmClientes = new DefaultTableModel(null, new String[]{"Nome", "Telefone", "Celular", "Aniversario"})
    { 
    public boolean isCellEditable(int row, int col) 
    { 
    return false; 
    }   
    };
    ListSelectionModel lsmClinetes;
    List<ContatoBean> clientes;
    ConexaoBD con;
    String tipoRegistro;
    int navega = 0;

    /**
     * Creates new form FormContatos
     */
    public FormContatos() {
        initComponents();
        con = new ConexaoBD();

        con.conecta();
        con.executeSQL("select * from contatos order by codigo");
        try {
            con.rs.first();
            mostraDados();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Você ainda não possui nenhum Contato Cadastrado!");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoSexo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tfPesquisaCliente = new javax.swing.JTextField();
        btBuscaCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        try{
            formatoTelefone = new MaskFormatter("##-####-####");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfTelefone = new JFormattedTextField(formatoTelefone);
        jLabel5 = new javax.swing.JLabel();
        try{
            formatoTelefone = new MaskFormatter("##-####-####");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfCelular = new JFormattedTextField(formatoTelefone);
        jLabel6 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfEndereco = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfAniversario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfBairro = new javax.swing.JTextField();
        btAnterior = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btGravar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btProximo = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        rbMasculino = new javax.swing.JRadioButton();
        rbFeminino = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agenda de Contatos");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Pesquisar Contato");

        tfPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPesquisaClienteActionPerformed(evt);
            }
        });

        btBuscaCliente.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btBuscaCliente.setText("Buscar");
        btBuscaCliente.setToolTipText("Pesquisar Cliente");
        btBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaClienteActionPerformed(evt);
            }
        });

        tbCliente.setModel(tmClientes);
        tbCliente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmClinetes = tbCliente.getSelectionModel();
        lsmClinetes.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e){
                if(!e.getValueIsAdjusting()){
                    tbClienteLinhaSelecionada(tbCliente);
                }
            }
        });
        jScrollPane1.setViewportView(tbCliente);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Código:");

        tfCodigo.setEditable(false);
        tfCodigo.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nome:");

        tfNome.setEditable(false);
        tfNome.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Telefone:");

        tfTelefone.setEditable(false);
        tfTelefone.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Celular:");

        tfCelular.setEditable(false);
        tfCelular.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("E-Mail:");

        tfEmail.setEditable(false);
        tfEmail.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Endereço:");

        tfEndereco.setEditable(false);
        tfEndereco.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Aniversario:");

        tfAniversario.setEditable(false);
        tfAniversario.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Bairro:");

        tfBairro.setEditable(false);
        tfBairro.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        btAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/anterior.gif"))); // NOI18N
        btAnterior.setToolTipText("Anterior");
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo_registro.gif"))); // NOI18N
        btNovo.setToolTipText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/gravar_registro.gif"))); // NOI18N
        btGravar.setToolTipText("Gravar");
        btGravar.setEnabled(false);
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/alterar_registro.gif"))); // NOI18N
        btAlterar.setToolTipText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete.gif"))); // NOI18N
        btExcluir.setToolTipText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Cancelar.gif"))); // NOI18N
        btCancelar.setToolTipText("Cancelar");
        btCancelar.setEnabled(false);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Limpar.gif"))); // NOI18N
        btLimpar.setToolTipText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/próximo.gif"))); // NOI18N
        btProximo.setToolTipText("Próximo");
        btProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProximoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Sexo:");

        grupoSexo.add(rbMasculino);
        rbMasculino.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        rbMasculino.setSelected(true);
        rbMasculino.setText("Masculino");
        rbMasculino.setEnabled(false);
        rbMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMasculinoActionPerformed(evt);
            }
        });

        grupoSexo.add(rbFeminino);
        rbFeminino.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        rbFeminino.setText("Feminino");
        rbFeminino.setEnabled(false);
        rbFeminino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemininoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tfPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                    .addComponent(tfEndereco))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfBairro))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAniversario)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(tfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMasculino)
                            .addComponent(rbFeminino)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(btAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btProximo)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btAlterar, btAnterior, btCancelar, btExcluir, btGravar, btLimpar, btNovo, btProximo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfCelular, tfTelefone});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscaCliente))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(tfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(rbMasculino))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbFeminino)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tfAniversario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAnterior)
                    .addComponent(btNovo)
                    .addComponent(btGravar)
                    .addComponent(btAlterar)
                    .addComponent(btExcluir)
                    .addComponent(btCancelar)
                    .addComponent(btLimpar)
                    .addComponent(btProximo))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btAlterar, btAnterior, btCancelar, btExcluir, btGravar, btLimpar, btNovo, btProximo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tfCelular, tfTelefone});

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-808)/2, (screenSize.height-627)/2, 808, 627);
    }// </editor-fold>//GEN-END:initComponents

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        limparCampos();
        desabilitarCampos();
        btNovo.setEnabled(true);
        btGravar.setEnabled(false);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
        btCancelar.setEnabled(false);
        btAnterior.setEnabled(true);
        btProximo.setEnabled(true);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        tipoRegistro = "novo";
        limparCampos();
        habilitarCampos();
        tfNome.requestFocus();
        btNovo.setEnabled(false);
        btGravar.setEnabled(true);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btCancelar.setEnabled(true);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);
    }//GEN-LAST:event_btNovoActionPerformed

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        if (tipoRegistro.equals("novo")) {
            gravaRegistro();
        } else if (tipoRegistro.equals("alteracao")) {
            alteraRegistro();
        }
        desabilitarCampos();
        btNovo.setEnabled(true);
        btGravar.setEnabled(false);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
        btCancelar.setEnabled(false);
        btAnterior.setEnabled(true);
        btProximo.setEnabled(true);
    }//GEN-LAST:event_btGravarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        tipoRegistro = "alteracao";
        habilitarCampos();
        tfNome.requestFocus();
        btNovo.setEnabled(false);
        btGravar.setEnabled(true);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btCancelar.setEnabled(true);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);

    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        if (tbCliente.getSelectedRow() != -1) {
            excluiRegistro();

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Contato da Tabela!");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed
        navega = 1;
        try {
            con.rs.previous();
            mostraDados();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Localizar o Registro Anterior!");
        }

    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProximoActionPerformed
        navega = 2;
        try {
            con.rs.next();
            mostraDados();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Localizar o Próximo Registro!");
        }

    }//GEN-LAST:event_btProximoActionPerformed

    private void btBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaClienteActionPerformed
        buscaRegistro();        


    }//GEN-LAST:event_btBuscaClienteActionPerformed

    private void tfPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPesquisaClienteActionPerformed
        buscaRegistro();

    }//GEN-LAST:event_tfPesquisaClienteActionPerformed

    private void rbMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMasculinoActionPerformed
        sexo = "M";
    }//GEN-LAST:event_rbMasculinoActionPerformed

    private void rbFemininoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemininoActionPerformed
        sexo = "F";
    }//GEN-LAST:event_rbFemininoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FormContatos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btBuscaCliente;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btProximo;
    private javax.swing.ButtonGroup grupoSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbFeminino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTextField tfAniversario;
    private javax.swing.JTextField tfBairro;
    private javax.swing.JTextField tfCelular;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfEndereco;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfPesquisaCliente;
    private javax.swing.JTextField tfTelefone;
    // End of variables declaration//GEN-END:variables

    private void habilitarCampos() {
        tfNome.setEditable(true);
        tfTelefone.setEditable(true);
        tfCelular.setEditable(true);
        tfEmail.setEditable(true);
        tfAniversario.setEditable(true);
        tfEndereco.setEditable(true);
        tfBairro.setEditable(true);
        rbMasculino.setEnabled(true);
        rbFeminino.setEnabled(true);

    }

    private void desabilitarCampos() {
        tfNome.setEditable(false);
        tfTelefone.setEditable(false);
        tfCelular.setEditable(false);
        tfEmail.setEditable(false);
        tfAniversario.setEditable(false);
        tfEndereco.setEditable(false);
        tfBairro.setEditable(false);
        rbMasculino.setEnabled(false);
        rbFeminino.setEnabled(false);

    }

    private void limparCampos() {
        tfCodigo.setText("");
        tfNome.setText("");
        tfTelefone.setText("");
        tfCelular.setText("");
        tfEmail.setText("");
        tfAniversario.setText("");
        tfEndereco.setText("");
        tfBairro.setText("");
        tfPesquisaCliente.setText("");
    }

    private void gravaRegistro() {
        ContatoControl c = new ContatoControl();
        ContatoBean cliente = new ContatoBean();
        if (verificarCampos()) {
            cliente.setNome(tfNome.getText().trim());
            cliente.setAniversario(tfAniversario.getText().trim());
            cliente.setTelefone(tfTelefone.getText().trim());
            cliente.setCelular(tfCelular.getText().trim());
            cliente.setEmail(tfEmail.getText().trim());
            cliente.setEndereco(tfEndereco.getText().trim());
            cliente.setBairro(tfBairro.getText().trim());
            cliente.setSexo(sexo);
            c.gravarRegistro(cliente);
            try {
                con.executeSQL("select * from contatos order by codigo");
                con.rs.next();
                mostraDados();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Tentar Gravar o Registro!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite Pelo Menos o Nome");
        }

    }

    private void alteraRegistro() {
        try {
            String sql = "update contatos set nome='" + tfNome.getText() + "',aniversario='" + tfAniversario.getText() + "',"
                    + "telefone='" + tfTelefone.getText() + "',celular='" + tfCelular.getText() + "',email='" + tfEmail.getText() + "',"
                    + "endereco='" + tfEndereco.getText() + "',bairro='" + tfBairro.getText() + "',"
                    + "sexo='"+ sexo + "' where codigo=" + tfCodigo.getText();
            con.stm.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Registro Alterado com Sucesso!");
            con.executeSQL("select * from contatos order by codigo");
            con.rs.next();
            mostraDados();


        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao Tentar Alterar o Registro!");
        }
    }

    private void excluiRegistro() {
        try {
            String sql = "select * from contatos where codigo=" + tfCodigo.getText();
            con.executeSQL(sql);
            con.rs.first();
            String nome = "Deletar Contato " + con.rs.getString("nome") + "?";
            int opcao = JOptionPane.showConfirmDialog(null, nome, "Deletar Contato", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                sql = "delete from contatos where codigo=" + tfCodigo.getText();
                int excluiu = con.stm.executeUpdate(sql);
                if (excluiu == 1) {
                    JOptionPane.showMessageDialog(null, "Registro Excluído com Sucesso!");
                    con.executeSQL("select * from contatos order by codigo");
                    con.rs.first();
                    mostraDados();
                }
            } else {
                con.executeSQL("select * from contatos order by codigo");
                con.rs.first();
                mostraDados();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao Tentar Excluir Registro!");
        }
    }

    // Mostra os dados da consulta ao banco de dados nos respectivos Campos
    private void mostraDados() {
        try {

            tfCodigo.setText(con.rs.getString("codigo"));
            tfNome.setText(con.rs.getString("nome"));
            tfAniversario.setText(con.rs.getString("aniversario"));
            tfTelefone.setText(con.rs.getString("telefone"));
            tfCelular.setText(con.rs.getString("celular"));
            tfEmail.setText(con.rs.getString("email"));
            tfEndereco.setText(con.rs.getString("endereco"));
            tfBairro.setText(con.rs.getString("bairro"));
            
            if(con.rs.getString("sexo").equals("M"))
                rbMasculino.setSelected(true);
            else
                rbFeminino.setSelected(true);

        } catch (Exception e) {
                      
            if (navega == 1) {
                JOptionPane.showMessageDialog(null, "Você já Está no Primeiro Registro");
            } else if (navega == 2) {
                JOptionPane.showMessageDialog(null, "Você já está no Último Registro");
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum Registro Localizado!");
            }
            navega = 0;
        }
     }

    // Verifica se o Campo Nome (Obrigatório) não está Nulo
    private boolean verificarCampos() {
        if (!tfNome.getText().trim().equals("")) {
            return true;
        }
        return false;
    }

    // Consulta os Registros de Clientes no Banco de Dados
    private void buscaRegistro() {
        ContatoControl cli = new ContatoControl();
        clientes = cli.listarContatos("%" + tfPesquisaCliente.getText().trim() + "%");
        mostrarClientes(clientes);
    }

    // Mostra os Registros de Clientes na Tabela
    private void mostrarClientes(List<ContatoBean> clientes) {
        while (tmClientes.getRowCount() > 0) {
            tmClientes.removeRow(0);
        }

        if (clientes.size() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum contato Encontrado!");
        } else {
        }
        String[] campos = new String[]{null, null, null, null};
        for (int i = 0; i < clientes.size(); i++) {

            tmClientes.addRow(campos);
            tmClientes.setValueAt(clientes.get(i).getNome(), i, 0);
            tmClientes.setValueAt(clientes.get(i).getTelefone(), i, 1);
            tmClientes.setValueAt(clientes.get(i).getCelular(), i, 2);
            tmClientes.setValueAt(clientes.get(i).getAniversario(), i, 3);
        }
    }

    // Carrega os Dados do Cliente Selecionado na Tabela nos Respectivos Campos
    private void tbClienteLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            tfCodigo.setText("" + clientes.get(tb.getSelectedRow()).getCodigo());
            tfNome.setText(clientes.get(tb.getSelectedRow()).getNome());
            tfAniversario.setText(clientes.get(tb.getSelectedRow()).getAniversario());
            tfTelefone.setText(clientes.get(tb.getSelectedRow()).getTelefone());
            tfCelular.setText(clientes.get(tb.getSelectedRow()).getCelular());
            tfEmail.setText(clientes.get(tb.getSelectedRow()).getEmail());
            tfEndereco.setText(clientes.get(tb.getSelectedRow()).getEndereco());
            tfBairro.setText(clientes.get(tb.getSelectedRow()).getBairro());

            if(clientes.get(tb.getSelectedRow()).getSexo().equals("M"))
                rbMasculino.setSelected(true);
            else
                rbFeminino.setSelected(true);

        }
    }
}
